import React, { useEffect, useState } from "react";
import { get, isEmpty } from "lodash";
import LoadingImages from "../../../LoadingImages";

import { getPreviewBulk } from "../../../../services/ajax/current-bulk";

//@ts-ignore
const { __ } = wp.i18n;

const ViewDataBulk = ({ state }) => {
	const [loading, setLoading] = useState(true);
	const [images, setImages] = useState([]);

	const fetchData = async () => {
		setLoading(true);
		const { data } = await getPreviewBulk();

		setLoading(false);
		setImages(data);
	};

	useEffect(() => {
		fetchData();
	}, []);

	const optimizeFilename = get(
		state,
		"currentProcess.settings.optimizeFile",
		false
	);

	const optimizeAlt = get(
		state,
		"currentProcess.settings.optimizeAlt",
		false
	);

	return (
		<div className="bg-white rounded-lg border max-w-5xl p-6 relative">
			<div className="flex">
				<div className="flex-1 mr-4">
					<h2 className="text-base font-bold">
						{__("Results details", "imageseo")}
					</h2>
				</div>
				<div
					className="flex items-center justify-center px-4 py-2 border rounded-md shadow-sm text-sm font-medium text-black bg-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 cursor-pointer text-center"
					style={{
						minWidth: 170,
					}}
					onClick={() => fetchData()}
				>
					{__("Reload data", "imageseo")}
					{loading && (
						<img
							//@ts-ignore
							src={`${IMAGESEO_DATA.URL_DIST}/images/rotate-cw.svg`}
							style={{
								marginLeft: 5,
								animation:
									"imageseo-rotation 1s infinite linear",
							}}
						/>
					)}
				</div>
			</div>
			<p className="text-sm my-2">
				{__(
					"Here is the preview of 5 randoms alt tags generated by our AI.  You can manually edit them in the WordPress media library.",
					"imageseo"
				)}
			</p>

			<div className="mt-2">
				{loading && <LoadingImages />}
				{images.map((image, key) => {
					let filename = __("Sorry, no filename found", "imagesee");
					let alt = "";
					let oldFilename = "";
					let oldAlt = "";
					if (get(image, "report.success")) {
						filename = `${get(image, "report.filename")}.${get(
							image,
							"report.extension"
						)}`;
						oldFilename = `${get(image, "report.old_filename")}`;
						alt = `${get(image, "report.alt")}`;
						oldAlt = `${get(image, "report.old_alt")}`;
					}
					return (
						<div
							className="flex items-center mb-4 border-b pb-4"
							key={key}
						>
							<div className="p-2 border rounded-lg mr-4">
								<img src={image.url} className="w-16 h-16" />
							</div>
							<div className="flex items-center flex-1">
								{optimizeFilename && (
									<div className="flex-1 px-2">
										{!isEmpty(oldFilename) && (
											<p className="text-sm text-gray-500">
												(
												{__("Old filename", "imageseo")}
												: {oldFilename})
											</p>
										)}

										<p className="text-sm mb-2">
											<strong>
												{__(
													"New Filename:",
													"imageseo"
												)}{" "}
											</strong>
											{filename}{" "}
										</p>
									</div>
								)}

								{optimizeAlt && (
									<div className="flex-1 px-2">
										{!isEmpty(oldAlt) && (
											<p className="text-sm text-gray-500">
												({__("Old alt", "imageseo")}:{" "}
												{oldAlt})
											</p>
										)}
										<p className="text-sm">
											<strong>
												{__("Alt:", "imageseo")}
											</strong>{" "}
											{alt}
										</p>
									</div>
								)}
							</div>
						</div>
					);
				})}
			</div>
		</div>
	);
};

export default ViewDataBulk;
